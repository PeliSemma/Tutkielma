@inproceedings{servo,
 author = {Anderson, Brian and Bergstrom, Lars and Goregaokar, Manish and Matthews, Josh and McAllister, Keegan and Moffitt, Jack and Sapin, Simon},
 title = {Engineering the Servo Web Browser Engine Using Rust},
 booktitle = {Proceedings of the 38th International Conference on Software Engineering Companion},
 series = {ICSE '16},
 year = {2016},
 isbn = {978-1-4503-4205-6},
 location = {Austin, Texas},
 pages = {81--89},
 numpages = {9},
 doi = {10.1145/2889160.2889229},
 acmid = {2889229},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Rust, browser engine, concurrency, parallelism, servo},
}

@inproceedings{HistoryRust,
 note = {Speaker-Klabnik, Steve},
 title = {The History of Rust},
 booktitle = {Applicative 2016},
 series = {Applicative 2016},
 year = {2016},
 isbn = {978-1-4503-4464-7},
 location = {New York, NY, USA},
 pages = {--},
 url = {http://doi.acm.org.libproxy.helsinki.fi/10.1145/2959689.2960081},
 doi = {10.1145/2959689.2960081},
 acmid = {2960081},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{RustHighPerformanceGC,
 author = {Lin, Yi and Blackburn, Stephen M. and Hosking, Antony L. and Norrish, Michael},
 title = {Rust As a Language for High Performance GC Implementation},
 booktitle = {Proceedings of the 2016 ACM SIGPLAN International Symposium on Memory Management},
 series = {ISMM 2016},
 year = {2016},
 isbn = {978-1-4503-4317-6},
 location = {Santa Barbara, CA, USA},
 pages = {89--98},
 numpages = {10},
 url = {http://doi.acm.org.libproxy.helsinki.fi/10.1145/2926697.2926707},
 doi = {10.1145/2926697.2926707},
 acmid = {2926707},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Rust, garbage collection, memory management},
}

@inproceedings{OwnershipIsTheft,
 author = {Levy, Amit and Andersen, Michael P. and Campbell, Bradford and Culler, David and Dutta, Prabal and Ghena, Branden and Levis, Philip and Pannuto, Pat},
 title = {Ownership is Theft: Experiences Building an Embedded OS in Rust},
 booktitle = {Proceedings of the 8th Workshop on Programming Languages and Operating Systems},
 series = {PLOS '15},
 year = {2015},
 isbn = {978-1-4503-3942-1},
 location = {Monterey, California},
 pages = {21--26},
 numpages = {6},
 url = {http://doi.acm.org.libproxy.helsinki.fi/10.1145/2818302.2818306},
 doi = {10.1145/2818302.2818306},
 acmid = {2818306},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {embedded operating systems, linear types, ownership, rust},
}

@inproceedings{SessionTypes,
 author = {Jespersen, Thomas Bracht Laumann and Munksgaard, Philip and Larsen, Ken Friis},
 title = {Session Types for Rust},
 booktitle = {Proceedings of the 11th ACM SIGPLAN Workshop on Generic Programming},
 series = {WGP 2015},
 year = {2015},
 isbn = {978-1-4503-3810-3},
 location = {Vancouver, BC, Canada},
 pages = {13--22},
 numpages = {10},
 url = {http://doi.acm.org.libproxy.helsinki.fi/10.1145/2808098.2808100},
 doi = {10.1145/2808098.2808100},
 acmid = {2808100},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Rust, Session types, concurrency, generic types},
}

@inproceedings{CaseForWritingKernel,
 author = {Levy, Amit and Campbell, Bradford and Ghena, Branden and Pannuto, Pat and Dutta, Prabal and Levis, Philip},
 title = {The Case for Writing a Kernel in Rust},
 booktitle = {Proceedings of the 8th Asia-Pacific Workshop on Systems},
 series = {APSys '17},
 year = {2017},
 isbn = {978-1-4503-5197-3},
 location = {Mumbai, India},
 pages = {1:1--1:7},
 articleno = {1},
 numpages = {7},
 url = {http://doi.acm.org.libproxy.helsinki.fi/10.1145/3124680.3124717},
 doi = {10.1145/3124680.3124717},
 acmid = {3124717},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{AutomatedRefactoring,
 author = {Sam, Garming and Cameron, Nick and Potanin, Alex},
 title = {Automated Refactoring of Rust Programs},
 booktitle = {Proceedings of the Australasian Computer Science Week Multiconference},
 series = {ACSW '17},
 year = {2017},
 isbn = {978-1-4503-4768-6},
 location = {Geelong, Australia},
 pages = {14:1--14:9},
 articleno = {14},
 numpages = {9},
 url = {http://doi.acm.org.libproxy.helsinki.fi/10.1145/3014812.3014826},
 doi = {10.1145/3014812.3014826},
 acmid = {3014826},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{SystemProgramming,
 author = {Balasubramanian, Abhiram and Baranowski, Marek S. and Burtsev, Anton and Panda, Aurojit and Rakamari\'{c}, Zvonimir and Ryzhyk, Leonid},
 title = {System Programming in Rust: Beyond Safety},
 booktitle = {Proceedings of the 16th Workshop on Hot Topics in Operating Systems},
 series = {HotOS '17},
 year = {2017},
 isbn = {978-1-4503-5068-6},
 location = {Whistler, BC, Canada},
 pages = {156--161},
 numpages = {6},
 url = {http://doi.acm.org.libproxy.helsinki.fi/10.1145/3102980.3103006},
 doi = {10.1145/3102980.3103006},
 acmid = {3103006},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@article{RustLanguage,
 author = {Matsakis, Nicholas D. and Klock,II, Felix S.},
 title = {The Rust Language},
 journal = {Ada Lett.},
 issue_date = {December 2014},
 volume = {34},
 number = {3},
 month = oct,
 year = {2014},
 issn = {1094-3641},
 pages = {103--104},
 numpages = {2},
 url = {http://doi.acm.org.libproxy.helsinki.fi/10.1145/2692956.2663188},
 doi = {10.1145/2692956.2663188},
 acmid = {2663188},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {affine type systems, memory management, rust, systems programming},
}

@inproceedings{RustPOPLToPractice,
 author = {Turon, Aaron},
 title = {Rust: From POPL to Practice (Keynote)},
 booktitle = {Proceedings of the 44th ACM SIGPLAN Symposium on Principles of Programming Languages},
 series = {POPL 2017},
 year = {2017},
 isbn = {978-1-4503-4660-3},
 location = {Paris, France},
 pages = {2--2},
 numpages = {1},
 url = {http://doi.acm.org.libproxy.helsinki.fi/10.1145/3009837.3011999},
 doi = {10.1145/3009837.3011999},
 acmid = {3011999},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Substructural types, concur-rency, ownership, typeclasses, uniqueness},
}

@inproceedings{RustyTypes,
 author = {Benitez, Sergio},
 title = {Short Paper: Rusty Types for Solid Safety},
 booktitle = {Proceedings of the 2016 ACM Workshop on Programming Languages and Analysis for Security},
 series = {PLAS '16},
 year = {2016},
 isbn = {978-1-4503-4574-3},
 location = {Vienna, Austria},
 pages = {69--75},
 numpages = {7},
 url = {http://doi.acm.org.libproxy.helsinki.fi/10.1145/2993600.2993604},
 doi = {10.1145/2993600.2993604},
 acmid = {2993604},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {alias types, aliasing, capabilities, concurrency, formalization, linear types, memory safety, ownership types, race safety, rust, rusty types, semantics, syntax, type system},
}

# http://ieeexplore.ieee.org.libproxy.helsinki.fi/document/7371997/
@INPROCEEDINGS{CrustBoundedVerifier,
author={J. Toman and S. Pernsteiner and E. Torlak},
booktitle={2015 30th IEEE/ACM International Conference on Automated Software Engineering (ASE)},
title={Crust: A Bounded Verifier for Rust (N)},
year={2015},
pages={75-80},
keywords={data structures;formal verification;program compilers;program debugging;program diagnostics;program testing;software libraries;CRUST;Rust;bounded model checking;compiler;data structure implementations;exhaustive test generation;memory safety bugs;memory safety violations;pointer aliasing invariants;static analysis;unsafe library code;Arrays;Computer bugs;Indexes;Libraries;Safety;Standards;SMT-based verification;memory safety;test generation},
doi={10.1109/ASE.2015.77},
month={Nov},}

# http://ieeexplore.ieee.org.libproxy.helsinki.fi/document/7372036
@INPROCEEDINGS{FuzzingRustTypechecker,
author={K. Dewey and J. Roesch and B. Hardekopf},
booktitle={2015 30th IEEE/ACM International Conference on Automated Software Engineering (ASE)},
title={Fuzzing the Rust Typechecker Using CLP (T)},
year={2015},
pages={482-493},
keywords={logic programming;program debugging;program testing;CLP;Rust language;bug-finding technique;compiler testing;consistency bugs;constraint logic programming;interpreter testing;language fuzzing;rust typechecker;soundness bugs;typechecker precision bugs;well-typed program generation;Computer bugs;Engines;Grammar;Java;Logic programming;Syntactics;Testing},
doi={10.1109/ASE.2015.65},
month={Nov},}

# http://ieeexplore.ieee.org.libproxy.helsinki.fi/document/7163218
@INPROCEEDINGS{NomParserCombinatorsLibrary,
author={G. Couprie},
booktitle={2015 IEEE Security and Privacy Workshops},
title={Nom, A Byte oriented, streaming, Zero copy, Parser Combinators Library in Rust},
year={2015},
pages={142-148},
keywords={formal languages;grammars;program slicing;storage management;Nom;Rust language;level code;memory management;parser combinators library;parsing library;Arrays;Grammar;Instruction sets;Libraries;Memory management;Optimized production technology;low level code;memory safety;parser combinator;parser combinator library;state machine;state machine representation;streaming parser},
doi={10.1109/SPW.2015.31},
month={May},}

# http://ieeexplore.ieee.org.libproxy.helsinki.fi/document/6650903/
@INPROCEEDINGS{GPUProgramming,
author={E. Holk and M. Pathirage and A. Chauhan and A. Lumsdaine and N. D. Matsakis},
booktitle={2013 IEEE International Symposium on Parallel Distributed Processing, Workshops and Phd Forum},
title={GPU Programming in Rust: Implementing High-Level Abstractions in a Systems-Level Language},
year={2013},
pages={315-324},
keywords={embedded systems;graphics processing units;instruction sets;parallel architectures;parallel processing;CUDA;GPU programming;NVIDIA;OpenCL;data parallel computing;embedded domain specific languages;ergonomic abstractions;graphics processing units;high level abstractions;rust programming language;systems level language;virtual instruction set;Generators;Graphics processing units;Instruction sets;Kernel;Libraries;Programming;GPUs;Harlan;LLVM;Mozilla Rust;PTX},
doi={10.1109/IPDPSW.2013.173},
month={May},}

# https://scholar.google.fi/scholar?cluster=7677737469593165836&hl=en&as_sdt=0,5
@article{CursoryOverview,
  title={A cursory overview of the Rust programming language},
  author={Allberg, Filip and Lindstr{\"o}m, Adam Dahlgren and H{\"o}rnquist, Patrik and Lindqvist, Jakob and Marklund, Emil}
}

@BOOK{thegoodbook,
  title={The Rust Programming Language},
  author={Steve Klabnik and Carol Nichols},
  isbn = {978-1-59327-828-1},
  url = {https://doc.rust-lang.org/book/second-edition},
  year={2018},
  publisher={No Starch Press}
}

@misc{HowFastIsRust,
    title={Frequently Asked Questions - The Rust Programming Language},
    url={https://www.rust-lang.org/en-US/faq.html#how-fast-is-rust},
    urldate={2017-10-26}
}

@misc{WhatRedoxIs,
    title={The Redox Operating-System},
    url={https://doc.redox-os.org/book/overview/what_redox_is.html},
    urldate={2017-10-26}
}

@misc{AreWeGameYet,
    title={Are we game yet? - Rust},
    url={http://arewegameyet.com/categories/engines.html},
    urldate={2017-10-26}
}

@misc{UnityC,
    title={Is Unity Engine written in Mono/C#? or C++ - Unity Answers},
    url={http://answers.unity3d.com/questions/9675/is-unity-engine-written-in-monoc-or-c.html},
    urldate={2017-10-26}
}

@misc{UnrealEngineCPlusPlus,
    title={Introduction to C++ Programming in UE4 | Unreal Engine},
    url={https://docs.unrealengine.com/latest/INT/Programming/Introduction/},
    urldate={2017-10-26}
}

@misc{RustFriends,
    title={Friends of Rust - The Rust Programming Language},
    url={https://www.rust-lang.org/en-US/friends.html},
    urldate={2017-10-26}
}

@misc{QuantumSuperFastCSSEngine,
    title={Inside a super fast CSS engine: Quantum CSS (aka Stylo)},
    url={https://hacks.mozilla.org/2017/08/inside-a-super-fast-css-engine-quantum-css-aka-stylo/},
    urldate={2017-10-26}
}
